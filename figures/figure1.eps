%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 726.000000 205.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G95) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 726 205
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 726 205
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /zero put
dup 35 /three put
dup 36 /two put
dup 37 /D put
dup 38 /i put
dup 39 /e put
dup 40 /d put
dup 41 /S put
dup 42 /u put
dup 43 /r put
dup 44 /v put
dup 45 /T put
dup 46 /a put
dup 47 /t put
dup 48 /m put
dup 49 /n put
dup 50 /C put
dup 51 /o put
dup 52 /l put
dup 53 /O put
dup 54 /c put
dup 55 /y put
dup 56 /space put
dup 57 /A put
dup 58 /nine put
dup 59 /p put
dup 60 /hyphen put
dup 61 /equal put
dup 62 /period put
dup 63 /four put
dup 64 /b put
dup 65 /F put
dup 66 /s put
dup 67 /h put
dup 68 /quoteright put
dup 69 /x put
dup 70 /six put
dup 71 /plus put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/hyphen 3 def
/period 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/six 10 def
/nine 11 def
/equal 12 def
/A 13 def
/C 14 def
/D 15 def
/F 16 def
/O 17 def
/S 18 def
/T 19 def
/a 20 def
/b 21 def
/c 22 def
/d 23 def
/e 24 def
/h 25 def
/i 26 def
/l 27 def
/m 28 def
/n 29 def
/o 30 def
/p 31 def
/r 32 def
/s 33 def
/t 34 def
/u 35 def
/v 36 def
/x 37 def
/y 38 def
/quoteright 39 def
/uni2B91 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DE5E409528374E9E7E673E1353F43ED87BF92F553B34192352D69445B049DF4AB09101D67806CE36628C53D0EAC58B4F9F1D4A36AB015D6D9F65DB18C339D44154B041802ACBB99D9C9C286B306A1FDACD6694D079614C735BF437010413C1A2590F134EFC0C4C2E4091E5EB9066AF006B1D3A3A35FABE0E18C1AD92B6AEC81BEE155263291E93AC94848980EFBBEC557E8351E230FDAD99D32D85A34B02596FCD8B226FF05064B61377646394575BE7AA8888D78094D5F7D9974D01BA052446ECDE1FD73599FE19E867AB0546982FE3D965C6C66FFEDE2A2CBA8F0D8B92C3E62F18B29557EC4A671F99C7706C2565C44AF8DEB7382976D735B7FBEC1733969D582ECC7D6CF2F5D0579B444C0DD496A7A1C0E5D99020E1D48694CD6E13AF90E914FD03A45C4F812DE81C862F0D9990926387717D973FCD2785275933449FDA86577D026D8DFB73AB50782FF131CA60D1F98FD9F3DD455865FA12BB581BA03146DF40A45351D789612780134A3F09338AA2526A572E6B1C3E5C2289DB6334108C149556184D1AB555F6D399AFB4506246AFC746C2EBC561F0E28EDC229E59D578F37DE92780707FF7FF238E1D3C5945CCEE133139427E49343D88070501A97C9AF57A0F1E67606E6DC74697FCC657982A58D2FB6EF5D05651DFEF369AC149CD82F3ED71D77230D5AC1A328217D3038DDF590AFC1F27299F32BD7876DEB37FEA85CA187C612E53EFEE61A6505F7CC7D8DA21CBF9176BCF61428CA3D2B40C15892A
1985D0F926F9BF99B4DC425891232359781E703AB6AAE7B260F2FCF3B4BEF479E8E1103EE63306EE3F8FF0D4A4B6571AAAED79E1AE52651712B2947F73153C0B294941F2E8E0D50C1E61F82D58B3FC4A344F303D06F6B049B7B9E3D062A2B7DB873074BD7F84969DF54B633472889101ACA1CC85C5C43379B3E408587E59486B075EA0057907E450A87E5892E23BC6EF30D28919E2ED254C5B7D4BE1D88428725655D6EAD67FBDDB6F459B8DAA9F005F313651DC0D75D08952B1499E0910C0D48827E0C670EFA8C86625F66294871533356EB62081A0E71A745F0000DFB4341EB850BAEDF64AE0579259DCE17C1B6CCC61AC656B472F71C9520CE4E286B92D43B47892EC2C33B79A4C43447DB1480F9678100C5D4495D49A8C3DF19E477E2A942FB1C809D3A1BECF6EAFEF63D83F075AEAAE02354E2650A8B2F4C17B2902FFF983BE8B6CA117C1EE3B4022DC9BCB890E1057F3E9271E9925D5908BFFA3C430B45CF9125BC84273768858A74E8AA3D22DAA89661500E4A95BD2A7EB5DD5046AD47324B4148C96C24B3C1981BD3C5308D7ACDA9B3A57ED1EEFB521242C8D050E750CE70153F15B1966968658774DDC881190AB311D997D06524092EEFD94B2C5FBCAF9FBB5F501EF01DFE3AB187D1917EEE36700CBAA0D7E0CB5AECE8274F5BAACD5F4330EAE37CCBF20F44074C8227D37020309DB08A24E182480564CB39BDA04A26B9382AECED2F489422C195873EC1D28CF61D2098B42A60B57177F81D77599BC631504528ADE27AA9562AF7749434BCA4684D48F2360D6A0EDE5BFB435A75B73B0FFF0E4A647F646ED7D91BC3D79719A1FD4D7CD8D8818C63631799103A154F7F71DE03DB2B983BDFD9A55631B637692A03F4722A8E56851313CE3994CA0B375C3B7F095EF60751AFA97DEBFF779DBE1D425865B7A1677FFE79DB13ACAAE7B6853E77DE8DC17BF6BEC970117A67FC15270E5895F2C5C4848B4FCDF25DC0363F1043F02DC13017CA7A35C10EF2095B5727F4289AEF3EBA9C46E60466EC0D2B1CE468A50B15F2574CF7A559855C344263569819CAE021427C38D3451D9657391BC56D6E754CFC70013B0986353EB63C4F315E989F1AAE0B34FF4B656168AC6B39B053EA1E2BDE1C9BADE580054300FC47999219179E489B837DF0DDE870CD7C4B1DB0B1116D98A9701EB94969358856A84BF28A076567992C39085F904095D379CF71B5F424DF41C4BDAE4C00BA95302BFF23F260D3C74CD75B0814BFD76D15DEC6AE1DEF54B6B88F2912D667DDF1151220E3992E8B3304521B7C193B7735E3397A0728A5BFBF973DB991B28B1ED45E5A70030E94EDFEC91CA4127CE416BF775F218975E5416286AB3DC22225981684A82CF99E0EDCB1FEFF25BDF42DE3248F61A0F011D110BA1B474A327658C753B139F596E4E49C2A19B2D88EDA4EEB7F072
2066DAB5F688D8EB84D9810ECACBABBDD91D219BE32726780C9F7E73DD168DF6D7D459AB8BDE1D304D4EE7C0D0D4CEE2114C5A25C627A6FF1B855608D45251177CF081AADCF714B24C8E0E6DF97C3BF5EBA51116DB96CC018DAF90D8499D04E497BBCEA0B52BF528FB3967E0AD02BFFF942B53DA5D705B6CFD09A528368116413BEC997E4B861E18CEF8206AD9E8D8AAB938EE65F63D464A7EE207E7D0E0B5F2834ACE99353FE793ECE5B18C8F7CD0F4C4103372A8DB2229931A54A2A1CE98806C1967C499B07B2FFD03CA7F15C2F89F0C1F70E0891842DE90C78467823B5041898F178BE0697AE9D55C243210F85B8D562A0639E298CAF71F09AE9AA9518495361A4428AA1ECDBC1711956B3E1B9043E63DE330604373B52A488DB283F6D830F97F7E36706BC566583319E34907534E47B1680A345705A4F1A38489CCB9C5BBC31D57BCD40558EBCC1EE333B08A893108F27A3C9F4DEC7563801ADE8C95F2BFF299023EB8CC5B6EEA937183720F89DC2DD16EB3D5AD3BB5E7EC39BC78B3E7BA20534412802AF53C1A656F003A7957EF1D4C0CB5247C84F51CBE4E4FAAC4F23E2C67CC94D091D022A10A3AD0B8758E777C500B2695FCE576E1344D016B91F7127C69957DE2199ABC13CE018DD69E25CB44E13EA142D6BD117475124295F21E0878030C4AA8DB96EF1FEB0286B7AB933E0FDC8C94B6CFE46104564F8C61FC2D6B21A51BF4BF73FDB3338438CB67C5670AF0A6F50BFEBA7C46405C36DEED52BBE60207C61CCAF4C0AE556A7B359992985AEEB3E416EA5B27E06D0CA1329EC096839A31A6B4AA5DFB14C6E916159AC270122B1A2158BBEA6855567E6E246906AE3DAE30E6F4C6B3FF35A8FB348C072B7186117FDAF54E253BDA36E74620E95456F1C0D7161461E55156DFC260A8FD6F36993841B773F9A34D8C4DB90BD1B779A2ECB14DD9AF582D1A653509C04539159408D3BD287454304DA9EFE9A443E7BD1BC21F0BD730CB7443AFAF6E0476E981829308200677DD3EE9A11FF0AC4FCCFB31244ECD447DB12CD8487CA626511BB896DE208220BF49FED319B29451592A1456628CF4250424740245C31817F7DFC7782A9B8AC43B3A0AE57343DAD5722DB5BB82755F9305E726B026ED479C47D0F5C3849151C6A33DA4E462825CAE005B293B827AD404B219F4FD9FABF7A92E995D659C58FD29A32BB4149347C4F9830F428E957E7B0E9B1255EDCA0D52AEDD3205BBB9BB7D83BBDB81262C01B831F3A3246FA643F69B8653E84EEDB7544B4D8F9797CC43C8596294344295398475D901C987963FF298D054973120A2361BE29BCC62F91A1458CDDB6480D33F09D1AB1CF3AA20D6D2C59A40111342B0E65928DCC450ADE5446B31A690DD6687E357E2F1854A74BA55543C2AA39E43B3A778367CD3225D4F8A9DEA0EDC51D55EFBA594EC4F9CDB
270B700BCE6133ECB6E874D1030A10A9F72AC3360D1781120ABF8EA2980ACFDC4ECC3FB1FD2DAE72532844D269632E5EFF402FED505F9E85DD9F7277537094A641F655FBE407F2459A4520E4372A3B94A87AFBB2468CAD5D4CC31BA99599EA7E2AD1F14901C2EBB83CDB476D83BF2B0241A99F788AD3C7F741DD9E869358E0FC29E21F1F503048F32284DA0910C58ADE26CAB2583EA2BCDC084981E1E31E808CB4EFDB95033FA5EDA5212B696FB572B5D786F7C92791A40E26F8EA23E1403153B1B6E63EDAE1C6D6CE608549D305FBD51A9BC6FCE8832C81B546AA970894485A6343F86CCDB53E4AD374C1A237BF8713162707160C6B9E33C644F738743A59C172ACB00F4C7AC295577E3CE8E11D90E85E0BA9C46E960B657A5228D6F51B9F9CE2C1F31B14E9E40CFFBB6345A3C8576F53A63E37D13FF7CFCFA1BA0F6B5D0B79F11018FB5CCB3BD6B69282231191A8440B074F1884076A32EFACB8F8B0EFE5357CED5EF14E7DEF0D90E795EA74DE524D206C063E785065975C3DA612A03D28A90EB4CD02A0FC72F83C323EBB0802FDB59A35E0686B4BBAD09E584C97DB90C3105C5781B86AA6DBC2B5E36AAB028655BBC7D3455850DC06A0BECF2CC3A44040485E72195F4CC0A12521A4D404440086173F28DAC38879099BB7CBE59FBAFBB89A2B48B7FAF194BDC22869613898AA36AEF426B500021C5003860DC241413EF82D826C69CD3B25598692FCC525BE5691AB16C8542C244AC7C06B604253EB5E187726E06403B141729E12542FD9514702F9DE1DA1C80A6F50240661670ACC9E06B98D3BA97E576FCD53FE0DDF79281E0D7E54C81CCF18AFF7D21582D61FB9A7CAB38EA870F5C5FE8E3743052403805DA3F2C88B70BE12A002E23633ECE31D930C68843447619114CCEB6040A2669286C70931103CEC766F3600B9AE3D5E61733483E74CF69F4A948830E75BE5E169E5FCF552956BE3A46444D4399530903A2426ABDED54F73131F2211C3C2E402A0CB2C1423168A54C3762C5A3535D1806CFB7A91C814E4357F7A2C41EC1FC247C79EEFB77162F9C439AB3D4C00712421CF333FFECE26E5C1BF32CA9A801F497D22435B5C9CC763610CE69AEF044F56B0DD1D52DCC21B58FFD924EF66F72DDC1796DB1BA4E2109A4438A89A13B5E2BDEF6CE57439A9D0A7A6CD0B93B10CD382EEA0CD12E93FC226AA7B7B7908A7314CD55ABA0E0B80CF24E89FD1BDDAF7FC91D119EDCB877C6EDCDA4438D12F358857DF1276D0E04C623508489694C456EBE391B0CD6A42EACF2EAFDBA0F579517FADD6166B24132727000A6608FC17EDC413CE8BFB96246B4B54A349B8B7328FFD7210E306A552614A5C5327454601568DC99AA07DC455D0401A3BD743B2C2005DB5B278A57533A834FA9DF2CA3990836D189B16A0D61A7F9916C22876C08C590ECE46355DEB60

829BC0F615D5149A7BB14A56672C7239C1C2A75E041F3CD47E4551982B599435655A18506D701BB5EC87B43173165DB9BE553C90B49FA14A96E5D8C747847A7FDE9D6F9AA2DBB04739F8AE3966B20B3255A3CFDF95C3D17D856A32D17494088DC5627716BD776874E88CB8458FF5F9C1764C58A1035C3626438EE3C113B832E0391B0DE5936E4F1CC1D4D1747F29E09B1E57DCEBCEE14D7806D4D018F26EC94831110EB4C3918B7CE31A3506CA1EEC40B4B569DB4C804FDFA741B8369AD8A93F098BC4846344FB78C8AA9F2858A01E6432C0E8D63532A9A3CBDE9C3DABCDD57B4D25BA60201C0F82DA1758269A69924CA688E1BF665D7B2E5BA01EC09926A4F992D0211BDF5635F7269C5E8C89021C5F885E8EBDF5A9FF260B1180479D01CA13A864A21B22E00AB8D3CDF0462A8BF6C8F1BD3B5CA90C5893AC281651E5F5CFC7E0AA22746A2D9F95077993737666843B8024A017E23A1E245EA9F6523F050108E0B36EB5BF28C51B12BB7F38188CF5CEEBC35D33BF62AEFE7B61893BA33E4BF9D96E7CCF9F2822D0106BB176A8A21484C38DE26DC7A1CB87EABB4210F741237294D2AF71ED23BD5E204361A15CE4D61A62D3791BA0679A30B7642F57308F70AADDE84BDAEF8A1EA491DD7FA73776EE6273420E62D48C6C6F08E4B24223F5DD10790A4389EF414B7459823B298292FA044CE6F5AE2DFA296C52C3BC05A81E106E79DF6BB1CEF3223AF7F5107CB5026AD336C4336754B0BF05103A174617E3ADFE89BAE5F5DF48FCB1C628FE207EE5B15AF34B118B8CAEECE3A75920D2E81D79651C7B2F6F25FB27FFDD072EC7EE492F3E8A5D0865ACD1F35A80D9FAFE7DD71D73DE567A73D26B9E41C0C0F9AD004833EC081F299D340F641CCB8B1E4F761F9C9FB3DAEC7F9381C318AC7BDB451A19644D80FEB42C6D53047AEDBD3819DC876E229829EE1D2533C944764DF844EC867D80BC9C148D63215227460ADA22F4B08963679B042522A76E20DB1F15C6016329FF043C389B4F92D0C843444A371025F809E59271272BF0EB6E8F4E594253A99E7317E9A606E1EC8CC304519C8501FFB9FB8F0FA8AD2896BF14CF1523D13C227CF9DE2D97C408B081969C62E1C0E6E72C88FFA75613318F918A4539C5BA0841ED523F996D65AD657537512EEAC14858CD4EB5BF9D58E4294E78CF4816F365776CC143A5B7E3E619E87200673990AF8D3C43A207A2C69BD135101E874C267CA7CD823877E5DF3A1C63AD68E810A5B74AF79CCBDB488E5C55D060F6BFEADFA771F97A6FE1A6E9BE069FC6AEEF57AABE57718F2EB398096AE2E645929DEED80756E5C892C5C6FFFEFDA0308818A8F842CCD0F01BE411C5C25D541EB6B3CEFE1040D399FE89AE13D46E173FB59DFAC99E095BD5F3407673A441230854254EE43E973451EA287DE8DF2D2527884C9652AE300529

2F5E97678BDFFEB62D527F1D1453C5B159EFCCCB8E472F73F39A7F1A668D24F573B102767D724538CE6726195CA5C9FF112ABC36BEB6D4B63B5797034FCE0D88B6496C1EAE344D0FDC59A47BDB7B901EAE38C9A353A5A3E6722118F4E6AD2ED432512CF53A6039919CF45BAE5B71A4760FC05CC01C03C31C6CAC475C87A4355E554BCCC0595FC7A2DA0C36CD1E8D8ABD045F11BC47FB4EE0BAF5B15F735F082D3DAD074038EEBB9C9CC42E4F6244BFBEFE2C5D57568F4467
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 726 205 rc
0 205 m
726 205 l
726 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-900.06897 820.93103 m
1788.8966 820.93103 l
1788.8966 -994.24139 l
-900.06897 -994.24139 l
h
-900.06897 820.93103 m
f
191 125 m
289 125 l
289 80 l
191 80 l
h
191 125 m
f
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
229 358 m
327 358 l
327 403 l
229 403 l
h
229 358 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
269.104 386.276 m
(!")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
289 125 m
387 125 l
387 80 l
289 80 l
h
289 125 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
327 358 m
425 358 l
425 403 l
327 403 l
h
327 358 m
S
/Cs4 SC
0 sc
0 i
367.104 386.276 m
(#")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
191 80 m
289 80 l
289 35 l
191 35 l
h
191 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
229 403 m
327 403 l
327 448 l
229 448 l
h
229 403 m
S
/Cs4 SC
0 sc
0 i
269.104 431.276 m
($")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
289 80 m
387 80 l
387 35 l
289 35 l
h
289 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
327 403 m
425 403 l
425 448 l
327 448 l
h
327 403 m
S
/Cs1 SC
0 sc
0 i
367.104 431.276 m
($")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
191 170 m
289 170 l
289 125 l
191 125 l
h
191 170 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
229 313 m
327 313 l
327 358 l
229 358 l
h
229 313 m
S
/Cs4 SC
0 sc
0 i
261.552 341.276 m
(%&'\()[ 11.264000 3.552000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
289 170 m
387 170 l
387 125 l
289 125 l
h
289 170 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
327 313 m
425 313 l
425 358 l
327 358 l
h
327 313 m
S
/Cs1 SC
0 sc
0 i
344.888 341.276 m
(\)*+,&,'\()[ 10.368000 8.896000 5.328000 8.000000 3.552000 8.000000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
93 125 m
191 125 l
191 80 l
93 80 l
h
93 125 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
131 358 m
229 358 l
229 403 l
131 403 l
h
131 358 m
S
/Cs1 SC
0 sc
0 i
144.424 386.276 m
(-+'./0'1/)[ 7.712000 5.040000 8.592000 8.592000 5.040000 13.648000 8.592000 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
93 80 m
191 80 l
191 35 l
93 35 l
h
93 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
131 403 m
229 403 l
229 448 l
131 448 l
h
131 403 m
S
/Cs1 SC
0 sc
0 i
153.776 431.276 m
(231/+34)[ 11.552000 9.184000 8.896000 5.040000 5.040000 9.184000 0.000000 ] xS
293 298 m
(5*/630')[ 12.160000 8.896000 5.040000 8.592000 9.184000 13.648000 0.000000 ] xS
43 408 m
(\)/*\(789+0)[ 10.368000 5.040000 8.896000 9.488000 8.000000 4.448000 10.368000 5.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
529 125 m
627 125 l
627 80 l
529 80 l
h
529 125 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
567 358 m
665 358 l
665 403 l
567 403 l
h
567 358 m
S
/Cs4 SC
0 sc
0 i
607.104 386.276 m
(!!)[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
627 125 m
725 125 l
725 80 l
627 80 l
h
627 125 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
665 358 m
763 358 l
763 403 l
665 403 l
h
665 358 m
S
/Cs1 SC
0 sc
0 i
705.104 386.276 m
($:)[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
529 80 m
627 80 l
627 35 l
529 35 l
h
529 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
567 403 m
665 403 l
665 448 l
567 448 l
h
567 403 m
S
/Cs1 SC
0 sc
0 i
607.104 431.276 m
($")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
627 80 m
725 80 l
725 35 l
627 35 l
h
627 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
665 403 m
763 403 l
763 448 l
665 448 l
h
665 403 m
S
/Cs1 SC
0 sc
0 i
705.104 431.276 m
($")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
529 170 m
627 170 l
627 125 l
529 125 l
h
529 170 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
567 313 m
665 313 l
665 358 l
567 358 l
h
567 313 m
S
/Cs1 SC
0 sc
0 i
599.552 341.276 m
(%&'\()[ 11.264000 3.552000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
627 170 m
725 170 l
725 125 l
627 125 l
h
627 170 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
665 313 m
763 313 l
763 358 l
665 358 l
h
665 313 m
S
/Cs1 SC
0 sc
0 i
682.888 341.276 m
(\)*+,&,'\()[ 10.368000 8.896000 5.328000 8.000000 3.552000 8.000000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
431 125 m
529 125 l
529 80 l
431 80 l
h
431 125 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
469 358 m
567 358 l
567 403 l
469 403 l
h
469 358 m
S
/Cs1 SC
0 sc
0 i
482.42401 386.276 m
(-+'./0'1/)[ 7.712000 5.040000 8.592000 8.592000 5.040000 13.648000 8.592000 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
431 80 m
529 80 l
529 35 l
431 35 l
h
431 80 m
f
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 -38 483 cm
469 403 m
567 403 l
567 448 l
469 448 l
h
469 403 m
S
/Cs1 SC
0 sc
0 i
491.776 431.276 m
(231/+34)[ 11.552000 9.184000 8.896000 5.040000 5.040000 9.184000 0.000000 ] xS
631 298 m
(5*/630')[ 12.160000 8.896000 5.040000 8.592000 9.184000 13.648000 0.000000 ] xS
164.136 474.552 m
(;<,.4*'8=8">"?8@78A&BC'+DB8'E.6/)[ 9.488000 6.224000 8.000000 8.592000 3.552000 8.896000 8.592000 4.448000 9.600000 4.448000 8.896000 4.448000 8.896000 8.896000 4.448000 9.488000 8.000000 4.448000 9.184000 3.552000 8.000000 8.896000 8.592000 5.328000 3.264000 8.000000 4.448000 8.592000 8.288000 8.592000 8.592000 0.000000 ] xS
502.13599 474.552 m
(;<,.4*'8=8">"F8@78A&BC'+DB8'E.6/)[ 9.488000 6.224000 8.000000 8.592000 3.552000 8.896000 8.592000 4.448000 9.600000 4.448000 8.896000 4.448000 8.896000 8.896000 4.448000 9.488000 8.000000 4.448000 9.184000 3.552000 8.000000 8.896000 8.592000 5.328000 3.264000 8.000000 4.448000 8.592000 8.288000 8.592000 8.592000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs3 SC
0 0 0 sc
639.83679 368.24561 m
646.12415 366.42303 655.06146 364.48938 665 364.34784 c
684.10107 364.07578 697.91846 370.55136 697.91846 370.55136 c
S
0 i
CM
594.28967 112.11549 m
602.83148 111.92412 l
600.85114 117.58788 l
h
594.28967 112.11549 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -38 483 cm
632.28967 370.88452 m
640.83148 371.07587 l
638.85114 365.41214 l
h
632.28967 370.88452 m
S
/Cs2 SC
30 0 0 29 611 121 cm
save
270 12 cg_miaiproc 
44 -43 -42{
gsave 1 90 div 1 87 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
90 44 scale
BI
/Width 90
/Height 44
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 43 m 0 0 l 90 0 l 90 43 l h W n EOD
JcC<$kPt2TJcGKEre1/RriNm6c2[G:JcGKErp9OFrpn\@ZiB[uJcGKErp9OFrpoUZRK)p[JcGKE!UT.Q
m/,uFnqmD>!0@0Es8MB^kPk%/s7HAks3L`Em/,uFnqmD>!5niEs8MB^kPk%/s7HBJs-s&fm/,uFnqmD>
!;HMEs8MB^kPk%3s8Duj!.k1Es8MB^kPk%Ms5X.P!.k1Es8MB^kPk%gs2k<6!.k1Es8MB^kPk&,s0)Iq
!.k1Es8MB^kPk&Fs-<WW!.k1GrrN0"rp9OFrpkpGo`13Ujo>>HqrdtLM?!5KXoHTErp9OFrpkpGo`3&4
Z2agiqrdtLM?!5KiW#8Erp9OFrpkpGo`4mhJcG]Krp9OFrpl3Oq>^*fJcGKErp9OFrpm,ihuE?LJcGKE
rp9OFrpn&.`W,T2JcGKErp9OFrpntHX8hhmJcGKErp9OFrpombOoP(SJcG]Kqu?Z^qrdtLM?!5KQiH%E
rp9OFrpkpGo`28sa8c/*qrdtLM?!5KbQ"^Erp9OFrpkpGo`4+RPQ1XKqrdtLM?!5K!WW1Ns7u]om/,uF
ns07Js7HACs7cQmm/,uFnur)Js7HACs7cQmm/,uFo#^pJs7HACs7cQmm/,uFo&KbJs7HACs7cQmm/,uF
o)8TJs7HACs7cQmm/,uFnqmD>!1X#Es8MB^kPk%/s7HB"s24m9m/,uFnqmD>!71\Es8MB^kPk%/s7HBV
s,[3Zm/,uFnqmD@!!*'"JcGKErp9OFrplKWnc/7^JcGKErp9OFrpmDqfDkLDJcGKErp9OFrpn>6^&Ra*
JcGKErp9OFrpo7PU]9ueJcGKErp9OFrpkpGJ,
~> 0 44 m 0 0 l 90 0 l 90 44 l h W n EOD
o`0RCp](6ZqrdtLU]9NWo`0RCp](6ZqrdtL^&Q@Wo`0RCp](6ZqrdtLfDi2Wo`0RCp](6ZqrdtLnc,$W
o`0RCp\t9\li?DLkPk%/s7HAQs69R_m/,uFnqmD>!3-"Es8MB^kPk%/s7HB0s0_n+m/,uFnqmD>!8[[E
s8MB^kPk%/s7HBds+14Lm/,uFnr<\Js7HACs7cQmm/,uFnu)NJs7HACs7cQmm/,uFo"k@Js7HACs7cQm
m/,uFo%X2Js7HACs7cQmm/,uFo(E$Js7HACs7uZqs8W)bqrdtLM?!5KPQ0bErp9OFrpkpGo`2,obQ%S.
qrdtLM?!5Ka8`FErp9OFrpkpGo`3tNQiI'OqrdtLM?!5Kqu;6IrVul`qrdtLOoP7Wo`0RCp](6ZqrdtL
X8h)Wo`0RCp](6ZqrdtL`W*pWo`0RCp](6ZqrdtLhuBbWo`0RCp](6ZqrdtLq>ZTWo`0RCrVucprp9OF
rpkpGo`1?YiW&oDqrdtLM?!5KZ2_lErp9OFrpkpGo`328XoJCeqrdtLM?!5Kjo:PErp9OFrpkpGo`,$m
s+14Gs8MB^kPk%;s7QEb!.k1Es8MB^kPk%Us4dSH!;h9FNIgX#o)@nNkPjhio#L>#WW%D9!<*shkLSgu
kPeHI!<*shkO@YukPeHO!;f"[</U&:m/H5GkPj_,m/DJ55P5#Gs5!_Sm/,uFnqmD>!4DjEs8MB^kPk%/
s7HB<s/H%tm/,uFnqmD>!9sNEs8MB^kPk%/s7ZKo!!%TMp](6ZqrdtLRK)gWo`0RCp](6ZqrdtLZiAYW
o`0RCp](6ZqrdtLc2YKWo`0RCp](6ZqrdtLkPq=Wo`0RCp](6QqqD&9M>r)
~> 0 44 m 0 42 l 90 42 l 90 44 l h W n EOD
o`0RCp](6QqqD&9U]9NWo`0RCp](4WqZ-VF^&NZ`JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcCT,J,
~> restore
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -38 483 cm
649.95929 333.20001 m
678.45532 333.20001 l
678.45532 361.64801 l
649.95929 361.64801 l
h
649.95929 333.20001 m
S
/Cs1 SC
0 sc
0 i
654.95929 353.20001 m
(G!)[ 9.600000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
